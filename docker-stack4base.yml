version: "3"
services:
  my-eureka1:
    ports:
      - "10101"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
    image: shuiniudocker/my-eureka:1.0
    environment:
      - "EUREKA_SERVER=my-eureka2"

  my-eureka2:
    ports:
      - "10101"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
    image: shuiniudocker/my-eureka:1.0
    environment:
      - "EUREKA_SERVER=my-eureka1"

  my-config:
    ports:
      - "10201"
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
    image: shuiniudocker/my-config:1.0
    depends_on:
      - my-eureka1
      - my-eureka2

  mysql:
    ports:
      - "3306:3306"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    image: mysql:5.5
    volumes:
      - "/home/docker/volumes/mysql/logs:/logs"
      - "/home/docker/volumes/mysql/data:/var/lib/mysql"
    environment:
      - "MYSQL_ROOT_PASSWORD=123456"

  my-xxl:
    ports:
      - "10310"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    image: shuiniudocker/my-xxl:1.0
    environment:
      - "EUREKA_SERVER_LIST=http://my-eureka1:10101/eureka,http://my-eureka2:10101/eureka"
    depends_on:
      - my-eureka1
      - my-eureka2
      - mysql

  activemq:
    ports:
      - "8161:8161"
      - "61616:61616"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    image: webcenter/activemq
    volumes:
      - "/home/docker/volumes/activemq:/data/activemq/conf"

  portainer:
    image: portainer/portainer
    ports:
      - "9000:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "9001:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  default:
    external:
      name: test-swarm
    
